# -*- coding: utf-8 -*-
"""Data Visualization.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1p_UiCCv8XuFNMVGqFGkhbc7-Mr-Uw9K5
"""

import matplotlib.pyplot as plt
import pandas as pd

#Load dataset
df = pd.read_csv("district_data.csv")

#Assemble lists of desired variables
funding_per = []
grad_rate = []
students = []

no_outliers_funding_per = []
no_outliers_grad_rate = []
no_outliers_students = []

outlier_districts = []

for i,r in df.iterrows():
  funding_per.append(int(r['Cost'])/r['Students'])
  grad_rate.append(r['Graduation Rate'])
  students.append(r['Students'])
  if r['Graduation Rate'] > 20:
    no_outliers_funding_per.append(int(r['Cost'])/r['Students'])
    no_outliers_grad_rate.append(r['Graduation Rate'])
    no_outliers_students.append(r['Students'])
  else:
    outlier_districts.append(r['District'])

for outlier_district in outlier_districts:
  print(outlier_district)

#Funding per student to graduation rate
plt.plot(funding_per,grad_rate,'ro')
plt.xlabel("Funding per student")
plt.ylabel("Graduation rate")
plt.show()

max(funding_per)

#Funding per student to graduation rate without outliers
plt.plot(no_outliers_funding_per,no_outliers_grad_rate,'ro')
plt.xlabel("Funding per student")
plt.ylabel("Graduation rate")
plt.show()

#School size to funding per student
plt.plot(students,funding_per,'ro')
plt.ylabel("Funding per student")
plt.xlabel("Number of students")
plt.show()

#School size to funding per student without outliers
plt.plot(no_outliers_students,no_outliers_funding_per,'ro')
plt.ylabel("Funding per student")
plt.xlabel("Number of students")
plt.show()

#School size to graduation rate
plt.plot(students,grad_rate,'ro')
plt.ylabel("Graduation rate")
plt.xlabel("Number of students")
plt.show()

#School size to graduation rate without outliers
plt.plot(no_outliers_students,no_outliers_grad_rate,'ro')
plt.ylabel("Graduation rate")
plt.xlabel("Number of students")
plt.show()